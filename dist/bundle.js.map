{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;UC5CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN6E;;AAE7E;AACA;AACA;AACA;AACA,IAAI,sDAAe;;AAEnB,IAAI,qDAAc;;AAElB,IAAI,yDAAkB;AACtB,GAAG;AACH,CAAC","sources":["webpack://todo/./src/js/todo.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/webpack/runtime/make namespace object","webpack://todo/./src/js/index.js"],"sourcesContent":["let todoList = [];\n\n// 新たに入力された要素を取得し、todoListに代入する関数\nexport const registerNewTodo = () => {\n  const todoNameElem = document.getElementById(\"new-todo-name\");\n  const personElem = document.getElementById(\"new-person\");\n  const deadlineElem = document.getElementById(\"new-deadline\");\n  // 新たなTODOリストを追加\n  todoList.push({\n    todoName: todoNameElem.value,\n    person: personElem.value,\n    deadline: deadlineElem.value,\n  });\n};\n\n// todoリスト追加時に、todoの重複を避けるためにtodo一覧を削除する関数\nexport const removeTodoElem = () => {\n  const tbodyElem = document.getElementById(\"tbody\");\n  while (tbodyElem.firstChild) {\n    tbodyElem.removeChild(tbodyElem.firstChild);\n  }\n};\n\n// todoリストの一覧を表示する関数\nexport const appendTodoListElem = () => {\n  todoList.forEach((todo) => {\n    // todoNameのtdを作成\n    const todoNameTdElem = document.createElement(\"td\");\n    todoNameTdElem.textContent = todo.todoName;\n    // personのtdを作成\n    const personTdElem = document.createElement(\"td\");\n    personTdElem.textContent = todo.person;\n    // deadlineのtdを作成\n    const deadlineTdElem = document.createElement(\"td\");\n    deadlineTdElem.textContent = todo.deadline;\n\n    const trElem = document.createElement(\"tr\");\n    trElem.appendChild(todoNameTdElem);\n    trElem.appendChild(personTdElem);\n    trElem.appendChild(deadlineTdElem);\n\n    const tbodyElem = document.getElementById(\"tbody\");\n    tbodyElem.appendChild(trElem);\n  });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerNewTodo, removeTodoElem, appendTodoListElem } from \"./todo\";\n\n// todoリストの追加するボタンが押されたとき\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const registerButtonElem = document.getElementById(\"register\");\n  registerButtonElem.addEventListener(\"click\", () => {\n    registerNewTodo();\n\n    removeTodoElem();\n\n    appendTodoListElem();\n  });\n});\n"],"names":[],"sourceRoot":""}